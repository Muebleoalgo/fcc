---
// VolunteerForm.astro

import FormContainer from '~/components/ui/Form.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Contact as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
  class: customClass = '', // Agrega esta línea para una clase personalizada
} = Astro.props;

const formFields = {
  inputs: [
    { type: "text-cente", name: "nombre", label: "Nombre", placeholder: "Ingresa tu nombre", required: true },
    { type: "text", name: "apellidos", label: "Apellidos", placeholder: "Ingresa tus apellidos", required: true },
    { type: "text", name: "dni", label: "DNI", placeholder: "Ingresa tu DNI", required: true },
    { type: "email", name: "email", label: "Correo Electrónico", placeholder: "Ingresa tu correo electrónico", required: true },
    { type: "tel", name: "telefono", label: "Teléfono", placeholder: "Ingresa tu número de teléfono", required: true },
    { type: "date", name: "fecha_nacimiento", label: "Fecha de Nacimiento", required: true },
    {
      type: "select",
      name: "areas_interes",
      label: "Áreas de interés para el voluntariado",
      options: [
        { value: "educacion", label: "Educación y Alfabetización" },
        { value: "salud", label: "Salud y Bienestar" },
        { value: "medio_ambiente", label: "Cuidado del Medio Ambiente" },
        { value: "desarrollo_comunitario", label: "Desarrollo Comunitario" },
        { value: "asistencia_social", label: "Asistencia Social" },
        { value: "deporte_recreacion", label: "Deporte y Recreación" },
        { value: "arte_cultura", label: "Arte y Cultura" },
        { value: "apoyo_mayores", label: "Apoyo a Personas Mayores" },
        { value: "apoyo_jovenes", label: "Apoyo a Niños y Jóvenes" },
        { value: "capacitacion_empleo", label: "Capacitación y Empleo" },
        { value: "eventos_logistica", label: "Eventos y Logística" },
        { value: "desarrollo_tecnologico", label: "Desarrollo Tecnológico" },
        { value: "recursos_humanos", label: "Recursos Humanos y Gestión de Voluntarios" },
        { value: "marketing", label: "Marketing y Comunicación" },
        { value: "finanzas", label: "Finanzas y Recaudación de Fondos" },
        { value: "asesoria_legal", label: "Asesoría Legal" },
        { value: "otros", label: "Otros" }
      ],
      other: true, // Activa la opción de "Otros" con un input adicional
      required: true
    },
    {
      type: "textarea",
      name: "experiencia_voluntariado",
      label: "Experiencia previa en voluntariado (Opcional)",
      placeholder: "Describe tu experiencia, si tienes alguna",
      rows: 4
    }
  ],
  disclaimer: {
    label: 'He leído y acepto la <a href="/privacy" target="_blank" class="underline text-blue-600">política de privacidad y los términos de servicio</a>.',
    required: true
  },
  button: "Enviar Registro"
};
---

<script>
  async function handleSubmit(event) {
    event.preventDefault();

    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData.entries());

    // Realizar la petición POST al servidor
    try {
      const response = await fetch('/api/volunteers/register', {  // Asegúrate que esta ruta coincida con la configurada en el backend
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();
      if (result.success) {
        alert("¡Registro exitoso!");
      } else {
        alert("Hubo un problema al registrar. " + result.message);
      }
    } catch (error) {
      console.error("Error al enviar el formulario:", error);
      alert("Ocurrió un error al enviar el formulario.");
    }
  }
</script>

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg} paddingClass="py-0">
  <Headline title={title} subtitle={subtitle} tagline={tagline} paddingClass="mb-2" />
  <div class={`flex flex-col max-w-xl mx-auto rounded-lg backdrop-blur border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900 shadow p-4 sm:p-6 lg:p-8 w-full ${customClass}`}>
    <FormContainer {...formFields} />
  </div>
</WidgetWrapper>
